spring.main.allow-bean-definition-overriding=true
logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=${{values.component_id}}

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.server.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.server.port=8081

# enable management endpoints for healthchecks and hawtio
management.endpoints.enabled-by-default = false
management.endpoint.hawtio.enabled = true
management.endpoint.jolokia.enabled = true
management.endpoint.health.enabled = true
management.health.defaults.enabled=false
camel.health.enabled=true
management.endpoints.web.exposure.include=hawtio,jolokia,health
hawtio.authenticationEnabled=false

# Enable Prometheus endpoint
camel.component.metrics.metric-registry=prometheusMeterRegistry

{% if values.amqp %}
amqp.uri=amqp://${{values.amq_broker_host}}:${{values.amq_broker_port}}
amqp.username=${{values.amq_broker_user}}
amqp.password=${{values.amq_broker_user_password}}
{% endif %}
{% if values.jpa %}
{% if values.database_type =='postgresql' %}
spring.datasource.url=jdbc:postgresql://${{values.database_host}}:${{values.database_port}}/${{values.database_name}}
spring.datasource.username=${{values.database_user}}
spring.datasource.password=${{values.database_user_password}}
spring.datasource.driver-class-name=org.postgresql.Driver
{% endif %}
{% endif %}
